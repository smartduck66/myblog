import{_ as n,c as t,m as s,a,t as e,V as l,o as r,ap as p,aq as h,ar as o}from"./chunks/framework.DyooxGaQ.js";const D=JSON.parse('{"title":"Netlify, le cr√©ateur de Jamstack","description":"","frontmatter":{"title":"Netlify, le cr√©ateur de Jamstack","date":"2023-02-10T00:00:00.000Z","category":["cloud"],"tag":["jamstack"],"archive":false},"headers":[],"relativePath":"posts/mon_usage_quotidien_de_netlify.md","filePath":"posts/mon_usage_quotidien_de_netlify.md"}'),k={name:"posts/mon_usage_quotidien_de_netlify.md"},d={id:"frontmatter-title",tabindex:"-1"},u=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"‚Äã",-1),c={id:"frontmatter-date-substring-8-10-frontmatter-date-substring-5-7-frontmatter-date-substring-0-4",tabindex:"-1"},E=s("br",null,null,-1),g=s("br",null,null,-1),m=s("a",{class:"header-anchor",href:"#frontmatter-date-substring-8-10-frontmatter-date-substring-5-7-frontmatter-date-substring-0-4","aria-label":'Permalink to ":calendar: {{ $frontmatter.date.substring(8,10) }}/{{ $frontmatter.date.substring(5,7) }}/{{ $frontmatter.date.substring(0,4) }}<br><br>"'},"‚Äã",-1),y=l('<br><p><img src="'+p+'" alt="IMG" title="netlify"><br><br> Je souhaitais vous parler aujourd&#39;hui de mon h√©bergeur pr√©f√©r√©, j&#39;ai nomm√© www.netlify.com. Apr√®s pr√®s de deux ans d&#39;utilisation, je suis capable d&#39;en tirer une premi√®re √©valuation qui pourra vous donner des √©l√©ments de comparaison avec votre propre fournisseur ou vous aider √† en choisir un pour vos projets.</p><p>Petit <em>caveat</em> toutefois : je suis loin d&#39;√™tre un expert des solutions multiples et vari√©es d&#39;h√©bergement d&#39;un site web, statique ou dynamique. Je veux juste d√©montrer l&#39;exp√©rience client assez exceptionnelle v√©cue avec netlify. Je suis certain que d&#39;autres fournisseurs doivent faire aussi bien üòâ</p><h4 id="le-tournant-du-jamstack" tabindex="-1">Le tournant du Jamstack <a class="header-anchor" href="#le-tournant-du-jamstack" aria-label="Permalink to &quot;Le tournant du Jamstack&quot;">‚Äã</a></h4><p>Quand j&#39;ai d√©but√© mon apprentissage des langages du web (cf. cet <a href="/posts/web_discovery.html">autre billet</a>), j&#39;ai √©videmment imm√©diatement voulu faire un <em>GO LIVE</em>. C&#39;√©tait en mars 2021. Mon premier site &quot;pur HTML/CSS&quot; √©tant sauvegard√© sur GitHub, je me suis alors tout naturellement tourn√© vers l&#39;offre maison gratuite <a href="https://pages.github.com/" target="_blank" rel="noreferrer">Pages</a>. Cool, simple, rapide, <em>no big deal</em>.</p><p>Mais, comme ses conditions g√©n√©rales l&#39;indiquent clairement, cette offre n&#39;est pas destin√©e √† une utilisation professionnelle :</p><blockquote><p>GitHub Pages n‚Äôest ni destin√©, ni autoris√© √† √™tre utilis√© comme service d‚Äôh√©bergement web gratuit pour ex√©cuter votre entreprise en ligne, votre site de commerce √©lectronique ou tout autre site web visant principalement √† faciliter des transactions commerciales ou √† fournir un SaaS commercial. Les sites GitHub Pages ne devraient pas √™tre utilis√©s pour des transactions sensibles telles que l‚Äôenvoi de mots de passe ou de num√©ros de carte de cr√©dit.</p></blockquote><p>Par cons√©quent, comme mon fr√®re souhaitait que je lui d√©veloppe un site statique munie d&#39;une boutique e-commerce, j&#39;ai commenc√© √† regarder les offres de <em>hosting</em> plus √©labor√©es. De fil en aiguille, j&#39;ai d√©couvert l&#39;univers <a href="/posts/jamstack_le_grand_retour_du_statique.html">Jamstack</a> d√©j√† d√©crit en mai dernier... et donc netlify co-fond√© en 2014 par Christian Bach (Chief Strategy &amp; Creative Officer) et Mathias Biilmann (CEO). Ma compr√©hension est que l&#39;√©mergence de l&#39;architecture web Jamstack (cit√©e pour la premi√®re fois en 2015 par M. Biilmann) et la cr√©ation de netlify (pour promouvoir cette &quot;nouvelle&quot; mani√®re de construire des sites web ?) se sont auto-nourries pour devenir le succ√®s que l&#39;on sait.</p><p>Comme quoi, avoir des id√©es est important... mais savoir les ex√©cuter est encore mieux. En effet, l&#39;id√©e de combiner Javascript, API et Markup date des d√©buts de HTML5... mais le savant marketing de netlify a vraiment fait d√©coller le concept üëç Pour ceux qui veulent aller plus loin sur Jamstack, ce <a href="https://books.google.com/books?id=TmYtEAAAQBAJ&amp;pg=PA6" target="_blank" rel="noreferrer">r√©cent ouvrage</a> vous apportera plus d&#39;informations.</p><h4 id="prise-en-main-de-netlify" tabindex="-1">Prise en main de netlify <a class="header-anchor" href="#prise-en-main-de-netlify" aria-label="Permalink to &quot;Prise en main de netlify&quot;">‚Äã</a></h4><p>A date, j&#39;h√©berge plus de douze sites sur netlify... <strong>totalement gratuitement</strong>. C&#39;est fou, non ? En fait, la soci√©t√© californienne vous autorise mensuellement 300 minutes de <em>build</em> et 100 Gb de bande passante, ce qui est suffisant pour nombre de sites personnels ou semi-professionnels. Evidemment, si mon activit√© de d√©veloppement prenait une autre ampleur, je passerais au plan &quot;Pro&quot; mais cela ne m&#39;apparait pas utile √† date.<br><br></p><p><img src="'+h+'" alt="IMG" title="netlify pricing"><br> Bon, il serait temps de &quot;rentrer dans le dur&quot;, non ? En vous connectant sur netlify, un <strong>tableau de bord</strong> vous donne acc√®s √† toutes les commandes importantes applicables √† vos sites h√©berg√©s, vous r√©sume votre offre (en l&#39;esp√®ce, <em>starter</em> dans mon cas), vous affiche la liste de vos sites (pr√©f√©r√©s en premier, rep√©r√©s par une petite √©toile jaune) puis vos derniers <em>builds</em>.<br><br></p><p><img src="'+o+`" alt="IMG" title="netlify dashboard"><br> Le <strong>processus de mise en ligne d&#39;un site</strong> est assez simple. Prenons l&#39;exemple de ce blog construit autour de VitePress. Une fois l&#39;installation locale fonctionnelle, on proc√®de de la mani√®re suivante :</p><ul><li>Synchronisation des √©l√©ments locaux avec son repo Git</li><li><em>Menu Sites/Add new site/Import an existing project</em> √† partir du tableau de bord netlify</li><li>Choisir GitHub en tant que <em>provider</em> puis le bon repo</li><li>Une fois la &quot;connexion&quot; op√©rationnelle entre GitHub et netlify, tout <em>push</em> de votre code vers GitHub actionnera un <em>build</em> du site sur netlify (le GO LIVE √©tant √©videmment √† discr√©tion)</li><li>Ensuite, diff√©rentes options sont disponibles comme la rajout de plugins (sitemap automatique, compression d&#39;images, moteur de recherche Algolia, CMS, etc.), la gestion de formulaire (que j&#39;utilise pour &quot;Contact&quot;) ou la redirection d&#39;un domaine externe (j&#39;utilise pour ma part Google Domains)</li></ul><p>Comme vous pouvez le constater, c&#39;est VRAIMENT tr√®s <em>plug and play</em> et je n&#39;ai jamais eu de difficult√©s √† lancer un site statique, m√™me quand il fait appel √† des API en <em>front</em>.</p><h4 id="serverless" tabindex="-1">Serverless <a class="header-anchor" href="#serverless" aria-label="Permalink to &quot;Serverless&quot;">‚Äã</a></h4><p>Maintenant, le <em>build et le run</em> de fonctions serverless qui s&#39;ex√©cutent c√¥t√© serveur est un poil plus complexe. Alors que c&#39;est r√©ellement sur ce point que la puissance d&#39;un environnement comme netlify fait toute la diff√©rence s&#39;il est bien ma√Ætris√©.</p><p>Pour tout vous avouer, j&#39;ai un peu &quot;gal√©r√©&quot; au d√©but et j&#39;ai du m&#39;y reprendre √† plusieurs fois avant de trouver <strong>la bonne configuration sur mon PC de d√©veloppement</strong>, car d√©bugger une fonction sans pouvoir poser des points d&#39;arr√™t est assez sportif quand elle s&#39;ex√©cute sur un serveur distant.</p><p>En r√©sum√©, voici les √©tapes qu&#39;il faut suivre si l&#39;on veut utiliser une base de donn√©es <em>serverless</em> telle que <a href="https://planetscale.com/" target="_blank" rel="noreferrer">Planetscale</a>, sachant que le code est stock√© dans le r√©pertoire /functions de votre arborescence :</p><ul><li>Installer netlify-cli sur votre PC : <code> npm install netlify-cli -g</code></li><li>Lancer <code> netlify init</code> pour connecter le repository GitHub</li><li>Lancer <code>netlify functions:serve</code> pour tester les fonctions en local sur le port 9999</li><li>Cr√©er le profil de la base de donn√©es dans la section &quot;environment variables&quot; sur netlify</li></ul><p>Ensuite, des outils comme requestBin, ngrok et Postman vous serviront √† tester et corriger en local les √©ventuelles bugs d√©couvertes. Un article du blog de <a href="https://snipcart.com/blog/what-are-webhooks-explained-example" target="_blank" rel="noreferrer">snipcart</a> explique bien comment les utiliser.</p><p>Voici un exemple de fonction serverless (seulement un petit morceau...) qui est appel√©e du front de l&#39;application sous la forme d&#39;une m√©thode POST :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { connect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@planetscale/database&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { fetch } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;undici&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Indispensable en mode serverless : https://github.com/planetscale/database-js (custom fetch function)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// mini-ORM</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Impl√©mentation type &quot;MySQL&quot; via planetscale</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// *******************************************************************</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Only allow POST</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (event.httpMethod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { statusCode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">405</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Method Not Allowed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Connexion √† la base distante : les variables sont charg√©es en fonction des variables d&#39;environnement stock√©es dans netlify</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_USERNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_SITE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fetch,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    host: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    database: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    username: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_USERNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    password: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> conn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //-- Parse the body contents into an object ===&gt;&gt;&gt;&gt; IMPERATIF POUR RECUPERER LES PARAMETRES</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> param</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.body);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> commande</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> values</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;v&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Les &quot;commandes&quot; ont √©t√© anonymis√©es avec des chiffres pour ne pas qu&#39;elles apparaissent &#39;en clair&#39; dans le code JS minifi√© c√¥t√© client</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (commande) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    case</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // S√©lection de tous les ateliers</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;SELECT * FROM &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PS_SITE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;_atelier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> results</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cmd);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          headers: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;Access-Control-Allow-Origin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          statusCode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          body: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ data: results.rows }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          headers: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;Access-Control-Allow-Origin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          statusCode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">405</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          body: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ data: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Une erreur s&#39;est produite dans la recherche de tous les ateliers : &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> error }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // autres Case.....</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //</span></span></code></pre></div><p>L&#39;utilisation de fonctions <em>serverless</em> est par exemple essentielle dans l&#39;acc√®s √† une base de donn√©es pour √©viter que <strong>vos secrets (user/password) ne soient accessibles</strong> en parcourant le code source envoy√© au navigateur. En effet, m√™me si votre code Javascript et <em>minifi√©</em>, cela ne suffit pas √† masquer le mot de passe qui permettra assez ais√®ment √† n&#39;importe quel petit malin de farfouiller dans vos tables üò≠</p><h4 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">‚Äã</a></h4><p>J&#39;esp√®re que ce petit aper√ßu des fonctionnalit√©s de netlify vous aura donn√© envie d&#39;aller plus loin. Et encore, je n&#39;ai pas √©voqu√© les possibilit√©s d&#39;Analytics, de gestion d&#39;identit√©, des <em>background functions</em> (√©quivalentes aux classiques batchs), etc. Bref, encore beaucoup de futurs articles potentiels üòâ Si vous souhaitez en savoir plus, n&#39;h√©sitez pas √† me <a href="/contact.html">contacter</a>.</p><p><a href="/">&gt; Accueil</a> <a href="/articles.html">&gt; Tous les articles</a></p>`,27);function f(i,F,b,v,q,C){return r(),t("div",null,[s("h1",d,[a(e(i.$frontmatter.title)+" ",1),u]),s("h5",c,[a("üìÜ "+e(i.$frontmatter.date.substring(8,10))+"/"+e(i.$frontmatter.date.substring(5,7))+"/"+e(i.$frontmatter.date.substring(0,4)),1),E,g,a(),m]),y])}const _=n(k,[["render",f]]);export{D as __pageData,_ as default};
