import{_ as s,c as n,m as e,a as r,t as a,V as i,o,ag as u}from"./chunks/framework.DyooxGaQ.js";const x=JSON.parse('{"title":"JAMstack, le grand retour du statique","description":"","frontmatter":{"title":"JAMstack, le grand retour du statique","date":"2022-05-15T00:00:00.000Z","category":["architecture"],"tag":["web"],"archive":false},"headers":[],"relativePath":"posts/jamstack_le_grand_retour_du_statique.md","filePath":"posts/jamstack_le_grand_retour_du_statique.md"}'),l={name:"posts/jamstack_le_grand_retour_du_statique.md"},c={id:"frontmatter-title",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"‚Äã",-1),p={id:"frontmatter-date-substring-8-10-frontmatter-date-substring-5-7-frontmatter-date-substring-0-4",tabindex:"-1"},m=e("br",null,null,-1),h=e("br",null,null,-1),f=e("a",{class:"header-anchor",href:"#frontmatter-date-substring-8-10-frontmatter-date-substring-5-7-frontmatter-date-substring-0-4","aria-label":'Permalink to ":calendar: {{ $frontmatter.date.substring(8,10) }}/{{ $frontmatter.date.substring(5,7) }}/{{ $frontmatter.date.substring(0,4) }}<br><br>"'},"‚Äã",-1),g=i('<p>Cette &quot;nouvelle&quot; architecture fait beaucoup parler d&#39;elle depuis son officialisation au milieu des ann√©es 2010, les trois premi√®res lettres de JAMstack signifiant Javascript, API et Markdown. Si l&#39;on se r√©f√®re √† la <a href="https://jamstack.org/what-is-jamstack/" target="_blank" rel="noreferrer">d√©finition</a> de ses cr√©ateurs et actifs promoteurs, &quot;Jamstack est une architecture con√ßue pour rendre le web plus rapide, plus s√©curis√© et plus simple √† porter √† l&#39;√©chelle. Ses principes fondamentaux constitu√©s par la pr√©-g√©n√©ration et le d√©couplage front/back permettent aux sites et applications web d&#39;√™tre d√©livr√©s en toute confiance et d&#39;√™tre tr√®s r√©silientes&quot;. Au-del√† du discours marketing habituel, cette mouvance tente de faire cohabiter le meilleur des deux mondes au sein d&#39;un site web : l&#39;aspect statique (rapidit√©, s√©curit√©, SEO optimal) et l&#39;aspect dynamique (interactions, richesse de l&#39;exp√©rience utilisateur)</p><h4 id="premiers-pas" tabindex="-1">Premiers pas <a class="header-anchor" href="#premiers-pas" aria-label="Permalink to &quot;Premiers pas&quot;">‚Äã</a></h4><p>Pour ma part, j&#39;ai √©t√© rapidement s√©duit par cette architecture qui m&#39;a rappel√© mon exp√©rience chez Vignette en 2000 : un Content Management System (CMS) qui pr√©-g√©n√©rait des pages statiques √† partir d&#39;une base de donn√©es, afin de rendre son site web plus tol√©rant √† la mont√©e en charge. Rien ne vaut en effet d&#39;acc√©der √† un site web constitu√© par de simples pages HTML : aucun d√©lai de g√©n√©ration &quot;√† la vol√©e&quot; par le serveur (SSR) ou par le client (CSR), pas de goulet d&#39;√©tranglement √† une base de donn√©es, une indexation optimale par les moteurs de recherche (meilleur SEO)... Pour cette raison, tout blog, site documentaire ou marketing se pr√™te admirablement √† utiliser cette architecture. J&#39;ai d&#39;ailleurs pu la mettre en oeuvre l&#39;ann√©e derni√®re au travers de deux sites tr√®s simples, l&#39;un servant √† mon fils de <a href="https://www.vivientonic.fr/" target="_blank" rel="noreferrer">&quot;vitrine&quot;</a> pour son activit√© initiale d&#39;auto-entrepreneur et l&#39;autre, d√©di√© au <a href="https://www.technosaures.fr/" target="_blank" rel="noreferrer">vintage computing</a>. A chaque fois, <a href="https://jekyllrb.com/" target="_blank" rel="noreferrer">Jekyll</a> a √©t√© utilis√©, l&#39;un des premiers SSG (Server Side Generation) √©crit en Ruby, toujours maintenu plus de 10 ans apr√®s sa cr√©ation par une √©quipe enthousiaste.<br> J&#39;ai pu constater la tr√®s grande facilit√© de mise en oeuvre de ce type d&#39;outils : apr√®s l&#39;installation sur son poste client, Jekyll propose une arborescence-type que l&#39;on n&#39;a plus qu&#39;√† peupler avec des fichiers √©crits en <a href="https://www.markdownguide.org/" target="_blank" rel="noreferrer">Markdown</a>, un langage de balises plus simple √† mettre en oeuvre que du HTML. Ensuite, le site peut √™tre test√© en local apr√®s sa g√©n√©ration puis mis en production via netlify, vercel ou autre cloudflare. Sinc√®rement, m√™me en tant que n√©ophyte en 2021 sur ces technologies, je n&#39;ai eu aucune difficult√© √† mettre en ligne en quelques jours les sites pr√©cit√©s.</p><h4 id="que-demander-de-plus" tabindex="-1">Que demander de plus ? <a class="header-anchor" href="#que-demander-de-plus" aria-label="Permalink to &quot;Que demander de plus ?&quot;">‚Äã</a></h4><p>Mais on ne peut pas toujours se contenter de pages purement statiques, sans interaction aucune avec l&#39;ext√©rieur. Et c&#39;est l√† qu&#39;intervent le &quot;d√©couplage front-back&quot;. Jamstack pr√¥ne la consommation de services externes (headless CMS, base de donn√©es, applications tierces) via des API et impose de fait une s√©paration claire entre le &quot;front&quot; de son application et le &quot;back&quot; souvent constitu√© par des services SaaS. Par exemple, j&#39;utilise une gestion de panier e-commerce nomm√©e <a href="https://snipcart.com/" target="_blank" rel="noreferrer">snipcart</a>, totalement externe √† mes applications : je l&#39;appelle dans mon code via un bouton &quot;postant&quot; les caract√©ristiques du produit √† acheter. <br><br><img src="'+u+'" alt="IMG" title="Un panier, dans technosaures.fr"><br></p><p>De m√™me, netlify met √† disposition un <a href="https://www.netlifycms.org/" target="_blank" rel="noreferrer">CMS &quot;light&quot;</a> qui permet de mettre √† jour son site : l&#39;administrateur saisit son article qui est pr√©-g√©n√©r√© ensuite automatiquement et stock√© en page statique.<br> Cette APIsation (le &#39;A&#39; de jAmstack), coupl√©e √† Javascript (le &#39;J&#39;...), rend cette architecture web extr√™mement puissante et adapt√©e virtuellement √† n&#39;importe quel site ou application.</p><h4 id="what-s-next" tabindex="-1">What&#39;s next ? <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What&#39;s next ?&quot;">‚Äã</a></h4><p>Je pr√©vois de tester des fonctionnalit√©s comme &quot;l&#39;hydration&quot;, qui apporte une dose plus ou moins forte d&#39;interactivit√©, gr√¢ce √† la possibilit√© d&#39;inclure du code javascript c√¥t√© client APRES la g√©n√©ration des pages c√¥t√© serveur. Eleventy va l&#39;impl√©menter dans sa <a href="https://www.11ty.dev/docs/plugins/partial-hydration/" target="_blank" rel="noreferrer">version 2.0</a>, avec son plugin &quot;is-land&quot;. Si vous souhaitez creuser le sujet, <a href="https://dev.to/this-is-learning/conquering-javascript-hydration-a9f" target="_blank" rel="noreferrer">Ryan Carniato</a> a r√©cemment √©crit un bon article sur le sujet.</p><p><a href="/">&gt; Accueil</a> <a href="/articles.html">&gt; Tous les articles</a></p>',9);function b(t,_,q,v,k,w){return o(),n("div",null,[e("h1",c,[r(a(t.$frontmatter.title)+" ",1),d]),e("h5",p,[r("üìÜ "+a(t.$frontmatter.date.substring(8,10))+"/"+a(t.$frontmatter.date.substring(5,7))+"/"+a(t.$frontmatter.date.substring(0,4)),1),m,h,r(),f]),g])}const j=s(l,[["render",b]]);export{x as __pageData,j as default};
