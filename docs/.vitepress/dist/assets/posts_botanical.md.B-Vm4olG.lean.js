import{_ as n,c as t,m as s,a as e,t as a,V as l,o as p,a3 as h,a4 as r,a5 as k,a6 as o}from"./chunks/framework.DyooxGaQ.js";const D=JSON.parse(`{"title":"La refonte de botanicalparis.com, un cas d'√©cole","description":"","frontmatter":{"title":"La refonte de botanicalparis.com, un cas d'√©cole","date":"2024-01-29T00:00:00.000Z","category":["projets"],"tag":["Vue.js"],"archive":false},"headers":[],"relativePath":"posts/botanical.md","filePath":"posts/botanical.md"}`),d={name:"posts/botanical.md"},E={id:"frontmatter-title",tabindex:"-1"},g=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"‚Äã",-1),c={id:"frontmatter-date-substring-8-10-frontmatter-date-substring-5-7-frontmatter-date-substring-0-4",tabindex:"-1"},u=s("br",null,null,-1),y=s("br",null,null,-1),m=s("a",{class:"header-anchor",href:"#frontmatter-date-substring-8-10-frontmatter-date-substring-5-7-frontmatter-date-substring-0-4","aria-label":'Permalink to ":calendar: {{ $frontmatter.date.substring(8,10) }}/{{ $frontmatter.date.substring(5,7) }}/{{ $frontmatter.date.substring(0,4) }}<br><br>"'},"‚Äã",-1),F=l('<br><p><img src="'+h+'" alt="IMG" title="Botanicalparis.com"><br><br> En septembre 2022, je d√©jeunais avec un entrepreneur qui me faisait part des probl√®mes de performance qu&#39;il rencontrait avec certains de ces sites Web. Il en avait en effet d√©velopp√© plusieurs, sous Wordpress. Personnellement, je ne connaissais pas particuli√®rement ce CMS mais je lui ai propos√© de v√©rifier ce que <a href="/posts/lighthouse.html">Lighthouse</a> d√©livrait comme indicateurs sur l&#39;un de ses sites d√©di√© √† la r√©servation d&#39;ateliers de d√©gustation de spiritueux, <a href="https://www.botanicalparis.com/" target="_blank" rel="noreferrer">botanicalparis.com</a>. Je me rappelle que la performance √©tait par exemple <strong>inf√©rieure √† 50 sur 100</strong>. Apr√®s quelques heures de recherche, des plugins remis √† jour ou supprim√©s, l&#39;indicateur reprenait des couleurs et je parvenais <em>peu ou prou</em> √† ce r√©sultat : <br></p><p><img src="'+r+'" alt="IMG" title="Lighthouse"></p><p>Comme je pi√©tinais dans l&#39;optimisation, sans r√©el moyen d&#39;aller plus loin de par ma m√©connaissance de l&#39;environnement, j&#39;ai propos√© √† Dimitri de <strong>refondre enti√®rement</strong> le site en question. Cela m&#39;a occup√© une vingtaine de jours sur le dernier trimestre 2022 et je n&#39;ai pas regrett√© d&#39;avoir r√©alis√© ce <em>Proof Of Concept</em>. A l&#39;√©poque, je d√©marrais avec <a href="/posts/le_choix_de_vue_js.html">le framework Vue.js</a> et j&#39;ai pu donc tester de nombreuses techniques de d√©veloppement Web comme le routage, l&#39;authentification, l&#39;utilisation d&#39;une base de donn√©es en mode PaaS instanci√©e en serverless, la mise en place d&#39;un espace client ou d&#39;un panier e-commerce.</p><p>Bref, j&#39;avais d√©velopp√© une application dont la couverture fonctionnelle √©galait le site actuellement en production, mais avec <strong>des tests Lighthouse bien meilleurs</strong> : <br></p><p><img src="'+k+`" alt="IMG" title="Lighthouse"></p><h3 id="entre-deux-mondes" tabindex="-1">Entre deux mondes <a class="header-anchor" href="#entre-deux-mondes" aria-label="Permalink to &quot;Entre deux mondes&quot;">‚Äã</a></h3><p>Qu&#39;ai-je r√©ellement appris au travers de cette exp√©rience ?</p><p>Tout d&#39;abord, comme tout d√©veloppeur, cela m&#39;a confort√© dans mes capacit√©s de <strong>productivit√©</strong>. Le site n&#39;est pas complexe en termes d&#39;UX/UI ou de fonctionnalit√©s, mais cumule la palette compl√®te de ce que l&#39;on attend d&#39;un site web <em>responsive</em> qui doit pr√©senter une offre produit, prendre des commandes, proposer un espace client et un back office d&#39;administration. Ce qui m&#39;a bluff√©, c&#39;est la <strong>relative rapidit√©</strong> de d√©veloppement autour du framework et l&#39;int√©gration somme toute ais√©e de modules tierce partie comme la gestion d&#39;un panier avec <a href="https://snipcart.com/" target="_blank" rel="noreferrer">snipcart</a> ou l&#39;authentification avec <a href="https://auth0.com/" target="_blank" rel="noreferrer">auth0</a>.</p><p>Ensuite, j&#39;appr√©hendais <strong>la connexion avec une base de donn√©es externe</strong> car je ne voulais pas me lancer dans une installation complexe. J&#39;avais d√©j√† utilis√© la base de donn√©es <em>serverless</em> Faunadb avec le d√©monstrateur climatique <a href="/posts/kiko_data_climat_france_dom_tom.html">Kiko</a>, mais je voulais cette fois tester une base de donn√©es <em>mysql</em>. Mon choix s&#39;est alors port√© sur <a href="https://planetscale.com/" target="_blank" rel="noreferrer">planetscale</a> dont j&#39;avais entendu parler par l&#39;interm√©diaire de l&#39;excellent podcast <a href="https://syntax.fm/" target="_blank" rel="noreferrer">syntax.fm</a>. Apr√®s une bonne journ√©e de prise en main et deux autres pour √©crire le code Javascript destin√© √† g√©rer les diff√©rentes requ√™tes SQL de lecture/√©criture dans la base, le tout fonctionnait convenablement üòâ</p><p>Enfin, en prenant du recul, j&#39;ai mieux compris <strong>l&#39;apport ind√©niable d&#39;un framework Web</strong>, m√™me si l&#39;on a parfois l&#39;impression de ne pas ma√Ætriser pleinement ce qui se passe. Le paradigme <a href="https://timkadlec.com/remembers/2019-10-21-using-the-platform/" target="_blank" rel="noreferrer">#usingtheplaform</a> est certes s√©duisant mais n√©cessite, √† mon sens, une exp√©rience et une expertise tr√®s approfondies des 3 standards du Web que sont les langages <strong>HTML, CSS et Javascript</strong>. Des d√©veloppeurs moins exp√©riment√©s, et qui ont besoin d&#39;√™tre productifs, doivent se reposer sur des outils plus &quot;englobants&quot;. Je pense que l&#39;√©cosyst√®me Vue.js r√©pond actuellement √† cette probl√©matique, entre le monde du CMS (Wordpress, Webflow, etc.) et le monde du d√©veloppement &quot;pur&quot;, sans framework, bundler ou autres plugins &#39;magiques&#39;. Je ne d√©sesp√®re toutefois pas de prouver, un jour, que d√©velopper avec les seuls langages du Web ne rajoute pas un temps de travail trop important et apporte des performances encore meilleures üòÅ</p><h3 id="quelques-tips" tabindex="-1">Quelques &#39;tips&#39; <a class="header-anchor" href="#quelques-tips" aria-label="Permalink to &quot;Quelques &#39;tips&#39;&quot;">‚Äã</a></h3><p>Cette introduction √©tant faite, voici quelques conseils et astuces que j&#39;ai pu mettre en pratique lors de ce d√©veloppement.</p><p>Tout d&#39;abord, il faut pouvoir <strong>tester en local les fonctions serverless</strong> qui seront appel√©es par l&#39;application. Comme je l&#39;ai d√©j√† mentionn√© dans d&#39;autres billets, j&#39;utilise <a href="/posts/mon_usage_quotidien_de_netlify.html">netlify</a> pour h√©berger mes projets personnels, qui met √† disposition <em>netlify-cli</em> :</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">npm install netlify-cli -g</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">netlify init </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">netlify functions:serve</span></span></code></pre></div><p>La premi√®re commande l&#39;installe, la seconde connecte le r√©pertoire github et la derni√®re est utilis√©e pour tester les fonctions en local sur le port 9999 (ex : localhost:9999/.netlify/functions/database?cmd=1). Cet outil s&#39;est av√©r√© tr√®s pr√©cieux dans le d√©bogage des appels √† la base de donn√©es qui sont <strong>s√©curis√©s</strong>, car s&#39;ex√©cutant c√¥t√© serveur et non dans le navigateur. Vous constaterez, dans le code qui g√®re la connexion √† la base de donn√©es, que les <em>secrets</em> sont masqu√©s :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Fonction serverless : /functions/db.js </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Connexion √† la base distante : les variables sont charg√©es </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// en fonction des variables d&#39;environnement stock√©es dans netlify</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_USERNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_SITE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  fetch,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  host: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  database: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  username: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_USERNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  password: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PS_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> conn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config);</span></span></code></pre></div><p>Le <strong>routage</strong> entre les diff√©rentes pages de l&#39;application est assur√© par <a href="https://router.vuejs.org/" target="_blank" rel="noreferrer">Vue Router</a>, configur√© ais√®ment gr√¢ce au squelette de <a href="https://github.com/richardevcom" target="_blank" rel="noreferrer">Richard</a>. On ne rappellera jamais assez que le <a href="https://vuejs.org/guide/best-practices/performance.html" target="_blank" rel="noreferrer">chargement dynamique des composants</a> (<em>code splitting</em>), que ce soit dans Vue ou tout autre framework JS, a un impact tr√®s important sur l&#39;indicateur de performance Lighthouse en ne chargeant en m√©moire que le code n√©cessaire √† un instant t :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Fichier : /router/index.js</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/degustations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D√©gustations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // When building apps with a bundler, the JavaScript bundle can become quite large, </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // and thus affect the page load time. It would be more efficient if we can split </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // each route&#39;s components into separate chunks, and only load them when the route </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // is visited.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../views/Degustations.vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>La <strong>gestion d&#39;√©tats</strong> a √©t√© confi√©e √† <a href="https://pinia.vuejs.org" target="_blank" rel="noreferrer">pinia</a> (futur Vuex 5 ?) qui m&#39;a permis de partager des constantes globalement, comme par exemple des <em>breakpoints</em> de taille d&#39;√©cran :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Fichier : /src/assets/mixins/store.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">smaller</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">md</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2xl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xxxl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: breakpoints[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2xl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span></code></pre></div><p>Quand une r√©servation d&#39;atelier est effectu√©e par un client, il faut d√©cr√©menter le nombre de places disponibles pour une date donn√©e. A cet effet, snipcart permet <a href="https://snipcart.com/blog/what-are-webhooks-explained-example" target="_blank" rel="noreferrer">l&#39;impl√©mentation</a> d&#39;un <strong>webhook</strong> qui autorise la communication asynchrone entre le site et un module tierce partie, en l&#39;occurence la gestion du panier e-commerce :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Fonction serverless : /functions/snipcart_webhook_order_events.js</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// D√©cr√©mentation des places dans les ateliers en fonction du nom, </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// de la date et de l&#39;horaire </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Exemple : &quot;UPDATE date_atelier SET dispo = dispo - 1 WHERE nom =&#39;GIN_DU_MONDE&#39; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// AND date=&#39;2022-12-02&#39; AND start_hour=&#39;20:00&#39;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> commandes_ateliers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> root.content.items.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> commande</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// note the &quot;new&quot; keyword here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  c.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.id; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Ex : GIN_PARISIEN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  c.price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.price;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  c.quantity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.quantity;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (item.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Carte cadeau&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c.date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.customFields[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].value;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c.start_hour </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.customFields[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].value;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> extractNetlifySiteFromContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context).site_url;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { c: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;7&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, v: commandes_ateliers };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(site1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/.netlify/functions/db&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  headers: { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Content-Type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/x-www-form-urlencoded&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  body: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data1),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> results1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { statusCode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(results1) }; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { statusCode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">422</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;String error !&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>L&#39;authentification</strong> donnant acc√®s √† la page d&#39;administration est g√©r√©e via <em>auth0</em>. Une fois le param√©trage effectu√© sur la console du service, le code √† ins√©rer dans une page est aussi simple que cela :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// File : /src/views/Admin.vue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import { useAuth0 } from &quot;@auth0/auth0-vue&quot;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">const { loginWithRedirect, logout, user, isAuthenticated } = useAuth0();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">function login() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  loginWithRedirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">function log_out() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  logout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ logoutParams: { returnTo: window.location.origin } });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Vue.js a g√©n√©r√© un √©cosyst√®me consid√©rable de composants d&#39;interface utilisateur. Par exemple, j&#39;ai utilis√© <a href="https://www.npmjs.com/package/@fullcalendar/vue3" target="_blank" rel="noreferrer">FullCalendar</a> qui offre une interface assez compl√®te : <br></p><p><img src="`+o+`" alt="IMG" title="Calendrier"><br></p><p>Le <strong>poids des images</strong> est crucial dans l&#39;optimisation de tout site Web, d&#39;o√π l&#39;introduction du standard <em>webp</em>. J&#39;ai √©crit le script suivant, lanc√© manuellement quand j&#39;int√®gre de nouvelles images :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Inspiration : https://sharp.pixelplumbing.com/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Utilisation : node webp.cjs</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sharp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sharp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> outputFolder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./public/img/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> inputFolder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./img_source/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> files</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readdirSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputFolder);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file_to_convert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sharp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputFolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_to_convert).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outputFolder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  file_to_convert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">substring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, file_to_convert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">indexOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.webp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Fichiers images transform√©s au format webp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Les <strong>fontes de caract√®res</strong> sont √©galement un facteur de poids excessif des sites Web. Le format <em>woff2</em> permet de les all√©ger. J&#39;ai d&#39;ailleurs pris le parti de n&#39;en utiliser qu&#39;une seule :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Fichier : /src/assets/styles.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">face {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Inter-V&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../assets/fonts/Inter.var.woff2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;woff2-variations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: oblique 0deg 10deg;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: fallback;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Enfin, Lighthouse met en avant dans ses recommandations d&#39;utiliser <strong>defer</strong> lors du chargement initial, ce qui permet de retarder l&#39;ex√©cution du script jusqu&#39;√† ce que le document soit pr√™t. Cette technique peut am√©liorer les performances de chargement de la page et garantir que le script ne bloque pas le rendu initial de la page :</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Fichier : /index.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/src/main.ts&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">‚Äã</a></h3><p>J&#39;esp√®re que ce cas d&#39;√©cole vous aura inspir√© et d√©montr√© que le portage d&#39;une application r√©alis√©e avec un CMS classique fait sens, surtout quand l&#39;on s&#39;√©carte d&#39;un site marketing classique ou autre blog. Le niveau de ma√Ætrise et de pr√©cision du code envoy√© au navigateur est incomparablement bien meilleur üòÉ</p><p>Maintenant, je suis persuad√© que des experts CMS sont capables d&#39;optimiser les performances des sites qu&#39;ils d√©livrent avec ce genre d&#39;outils. Comme toujours, il faut trouver le <strong>bon compromis</strong> entre d√©lai de livraison / qualit√© du code / empreinte carbone / simplicit√© de mise √† jour / ... Bref, pas simple !</p><p>Retrouvez tous mes projets personnels, ainsi que ce POC, dans cette <a href="/projets.html">section</a> de mon blog.</p><p><a href="/">&gt; Accueil</a> <a href="/articles.html">&gt; Tous les articles</a></p>`,38);function f(i,C,b,q,v,A){return p(),t("div",null,[s("h1",E,[e(a(i.$frontmatter.title)+" ",1),g]),s("h5",c,[e("üìÜ "+a(i.$frontmatter.date.substring(8,10))+"/"+a(i.$frontmatter.date.substring(5,7))+"/"+a(i.$frontmatter.date.substring(0,4)),1),u,y,e(),m]),F])}const _=n(d,[["render",f]]);export{D as __pageData,_ as default};
