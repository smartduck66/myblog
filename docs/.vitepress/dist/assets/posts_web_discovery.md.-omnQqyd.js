import{_ as s,c as n,m as e,a as r,t as a,V as i,o,aB as u,aC as l,aD as d,aE as c}from"./chunks/framework.DyooxGaQ.js";const x=JSON.parse('{"title":"A la d√©couverte des langages du web","description":"","frontmatter":{"title":"A la d√©couverte des langages du web","date":"2021-12-31T00:00:00.000Z","category":["langage"],"tag":["web"],"archive":false},"headers":[],"relativePath":"posts/web_discovery.md","filePath":"posts/web_discovery.md"}'),m={name:"posts/web_discovery.md"},p={id:"frontmatter-title",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"‚Äã",-1),b={id:"frontmatter-date-substring-8-10-frontmatter-date-substring-5-7-frontmatter-date-substring-0-4",tabindex:"-1"},h=e("br",null,null,-1),f=e("br",null,null,-1),q=e("a",{class:"header-anchor",href:"#frontmatter-date-substring-8-10-frontmatter-date-substring-5-7-frontmatter-date-substring-0-4","aria-label":'Permalink to ":calendar: {{ $frontmatter.date.substring(8,10) }}/{{ $frontmatter.date.substring(5,7) }}/{{ $frontmatter.date.substring(0,4) }}<br><br>"'},"‚Äã",-1),v=i('<p>Apr√®s un retour au code via C++ (2018-2020), 2021 a √©t√© pour moi la d√©couverte des langages du Web. M√™me si j&#39;avais fait un peu de &quot;back&quot; (TCL/TK) lors de mon passage chez Vignette au tout d√©but des ann√©es 2000, tout ceci √©tait maintenant tr√®s loin et il me fallait red√©marrer de z√©ro. Mon apprentissage pourra donner des pistes √† certains.</p><h4 id="html-css" tabindex="-1">HTML, CSS <a class="header-anchor" href="#html-css" aria-label="Permalink to &quot;HTML, CSS&quot;">‚Äã</a></h4><p>Etant de la &quot;vieille √©cole&quot;, j&#39;ai pr√©f√©r√© lire un ouvrage de qualit√© pour me lancer. Apr√®s quelques comparatifs, mon choix s&#39;est arr√™t√© sur &quot;Responsive Web Design with HTML5 and CSS&quot; de Ben Frain (3√®me √©dition - packt). L&#39;int√©r√™t de cet ouvrage r√©side dans son c√¥t√© progressif, mais √©galement tr√®s pratique. L&#39;auteur incite imm√©diatement le lecteur √† coder, en prenant des exemples concrets tir√©s de la conception du <a href="https://rwd.education/" target="_blank" rel="noreferrer">site web de l&#39;ouvrage</a>. J&#39;ai ainsi pu rapidement me familiariser avec les langages de base du web, HTML et CSS... et j&#39;ai constat√© que ce sont VERITABLEMENT des langages de programmation, riches et en constante √©volution. Un premier site web simple, h√©berg√© gratuitement sur <a href="https://pages.github.com/" target="_blank" rel="noreferrer">GitHub Pages</a>, m&#39;a permis apr√®s seulement quelques jours d&#39;appr√©hender des notions comme le <em>responsive design</em>, la typographie, le format SVG ou encore la saisie de formulaires en HTML. Je me suis d&#39;ailleurs assez rapidement pris au jeu du &quot;front&quot;, moi qui √©tait clairement un d√©veloppeur &quot;back&quot;. <br><br><img src="'+u+'" alt="IMG" title="Responsive Web Design, Ben Frain"><br></p><h4 id="ruby-et-ror" tabindex="-1">RUBY et ROR <a class="header-anchor" href="#ruby-et-ror" aria-label="Permalink to &quot;RUBY et ROR&quot;">‚Äã</a></h4><p>Peut-√™tre un peu curieusement, je ne me suis pas imm√©diatement plong√© dans le 3√®me langage indispensable qu&#39;est JavaScript. J&#39;ai en effet entendu parler de Ruby et du fameux framework &quot;Ruby on Rails&quot;. Ni une, ni deux, je me procure les deux ouvrages suivants :</p><ul><li>&quot;The Ruby Programming Language&quot; de David Flanagan et Yukihiro Matsumoto (Matz, le cr√©ateur du langage), paru en 2008 chez O&#39;Reilly.</li><li>&quot;Ruby on Rails Tutorial&quot; de Michael Hartl (6√®me √©dition - Addison-Wesley)</li></ul><p>Pendant plusieurs semaines, je d√©couvre un langage interpr√©t√© tr√®s √©l√©gant, tr√®s modulaire et qui permet de r√©aliser des programmes &quot;back&quot; rapidement. En parall√®le, l&#39;√©tude du framework &quot;RoR&quot; via l&#39;excellent ouvrage de M. Hartl, tr√®s didactique, me permet de mieux comprendre la m√©canique &quot;front - back&quot; d&#39;un site web. En effet, l&#39;auteur suit une d√©marche p√©destre qui, correctement suivie, vous am√®ne √† construire un site web complet sur Heroku, autour d&#39;une base de donn√©es, d&#39;une authentification, etc. Ce framework &quot;very opiniated&quot; comme disent les anglo-saxons a de r√©elles forces pour d√©livrer rapidement un produit digital. C&#39;est d&#39;ailleurs pour cette raison que nombre de start-ups l&#39;ont utilis√© depuis sa cr√©ation en 2004 par <a href="https://world.hey.com/dhh" target="_blank" rel="noreferrer">David Heinemeier Hansson</a>. <br><br><img src="'+l+'" alt="IMG" title="The Ruby Programming Language, David Flanagan et Yukihiro Matsumoto"><br></p><h4 id="jamstack" tabindex="-1">Jamstack <a class="header-anchor" href="#jamstack" aria-label="Permalink to &quot;Jamstack&quot;">‚Äã</a></h4><p>J&#39;ai tout de m√™me pu mettre en application &quot;un tout petit peu&quot; ces nouvelles connaissances en d√©ployant deux sites sous Jekyll, un <em>Server Side Generator</em> (SSG) √©crit en Ruby par Tom Preston-Werner en 2008. L&#39;√©norme int√©r√™t de ces outils r√©side dans la g√©n√©ration statique de pages, qui apporte entre autres une grande s√©curit√©, des performances en termes d&#39;acc√®s et de SEO sans √©gales. Je reparlerai dans d&#39;autres articles de l&#39;univers Jamstack, mouvance lanc√©e en 2015 par l&#39;un des co-fondateurs de Netlify. Je vous conseille d&#39;ailleurs un petit ouvrage bien √©crit sur les sites statiques, &quot;Working with Static Sites&quot; de Raymond Camden et Brian Rinaldi. Le premier tient d&#39;ailleurs un <a href="https://www.raymondcamden.com/" target="_blank" rel="noreferrer">blog de qualit√©</a> et le second est tr√®s actif, via sa newsletter <a href="https://jamstack.email/" target="_blank" rel="noreferrer">&quot;JAMstacked&quot;</a> √©dit√©e par Cooper Press. <br><br><img src="'+d+'" alt="IMG" title="Working with Static Sites, Raymon Camden et Brian Rinaldi"><br></p><h4 id="hors-js-point-de-salut" tabindex="-1">Hors JS, point de salut <a class="header-anchor" href="#hors-js-point-de-salut" aria-label="Permalink to &quot;Hors JS, point de salut&quot;">‚Äã</a></h4><p>Et puis, je n&#39;ai plus differ√© le &quot;grand saut&quot; en me mettant √† lire &quot;JavaScript: The Definitive Guide&quot; de David Flanagan (7√®me √©dition - O&#39;Reilly). Eh oui, c&#39;est lui qui avait d√©j√† &quot;commis&quot; l&#39;ouvrage sur Ruby. Je l&#39;ai d&#39;ailleurs √† peine termin√©, tant le sujet est vaste, polymorphe (front et back avec node), complexe et en √©volution √©galement constante avec un organisme de standardisation tr√®s actif <a href="https://www.ecma-international.org/technical-committees/tc39/" target="_blank" rel="noreferrer">(ECMA)</a>. Mes premi√®res impressions sont plut√¥t bonnes sur la rapidit√© du langage (diff√©rentes comparaisons effectu√©es avec C++), sa syntaxe, sa versatilit√© et sa complexit√© d&#39;apprentissage. Etant l&#39;un (si ce n&#39;est le...) des langages les plus utilis√©s et populaires actuellement, des ressources innombrables sont disponibles et il est rare de ne pas trouver rapidement une solution ou un conseil √©manant de stack overflow ou de GitHub CodeSearch. Sans compte l&#39;excellent <a href="https://developer.mozilla.org/fr/docs/Web/JavaScript" target="_blank" rel="noreferrer">MDN Web Docs</a> qui constitue une r√©f√©rence de grande qualit√© sur le langage. <br><br><img src="'+c+'" alt="IMG" title="JavaScript, the Definitive Guide, David Flanagan"><br></p><h4 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">‚Äã</a></h4><p>Cette ann√©e 2021 m&#39;a donn√© l&#39;occasion d&#39;une premi√®re immersion dans le d√©veloppement Web. J&#39;en retire une vraie satisfaction, en d√©couvrant un univers bien diff√©rent de mes exp√©riences pass√©es en tant que d√©veloppeur. Ce que j&#39;appr√©cie sans doute le plus est l&#39;aspect &quot;hello world !&quot;, c&#39;est-√†-dire la possibilit√© de publier et de partager son travail facilement &quot;au monde entier&quot;. Ce qui m&#39;a peut-√™tre un peu d√©rout√© au d√©but est la structure tr√®s diff√©rente d&#39;une application web versus un &quot;monolithe&quot; √©crit dans un langage compil√©. Un site web, c&#39;est des centaines de fichiers, des modules externes que l&#39;on int√®gre (via NPM, par exemple), une arborescence qui peut devenir complexe... et des interactions navigateur - serveur continuelles ! Mon CTO chez CACD2 m&#39;a conseill√© maintenant d&#39;√©tudier un framework JS pour booster ma productivit√©... Ce sera vue.js et je vous en parlerai l&#39;ann√©e prochaine üòâ</p><p><a href="/">&gt; Accueil</a> <a href="/articles.html">&gt; Tous les articles</a></p>',14);function _(t,k,S,w,y,R){return o(),n("div",null,[e("h1",p,[r(a(t.$frontmatter.title)+" ",1),g]),e("h5",b,[r("üìÜ "+a(t.$frontmatter.date.substring(8,10))+"/"+a(t.$frontmatter.date.substring(5,7))+"/"+a(t.$frontmatter.date.substring(0,4)),1),h,f,r(),q]),v])}const T=s(m,[["render",_]]);export{x as __pageData,T as default};
